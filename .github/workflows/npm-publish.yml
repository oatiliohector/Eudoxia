name: Release and Publish

on:
  push:
    branches:
      - main
    paths:
      - 'packages/**/*'

  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  release-and-publish:
    name: Release and Publish
    runs-on: ["self-hosted", "vs-colaborador"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
          registry-url: 'https://npm.pkg.github.com/'
          scope: '@oatiliohector'

      - name: Install Dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Detect Changed Packages
        id: changed
        run: |
          CHANGED_DIRS=$(git diff --name-only HEAD^ HEAD | grep '^packages/' | awk -F'/' '{print $1"/"$2}' | sort -u | tr '\n' ' ')
          echo "CHANGED_DIRS=$CHANGED_DIRS" >> $GITHUB_ENV

      - name: Release Changed Packages
        run: |
          for DIR in $CHANGED_DIRS; do
            if [ -d "$DIR" ] && [ -f "$DIR/package.json" ]; then
              echo "ðŸš€ [Release] Processing $DIR\n"
              cd $DIR

              export PKG_ROOT=$(node -p "require('./package.json').name")                            
              npx semantic-release --extends ../../.releaserc.js
              
              echo "ðŸš€ Processed release $DIR\n"
              cd -
            else
              echo "ðŸš« Skipping release to $DIR, not a package directory or no package.json found!"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name : Publish Changed Packages
        run: |
          for DIR in $CHANGED_DIRS; do
            if [ -d "$DIR" ] && [ -f "$DIR/package.json" ]; then
              echo "ðŸš€ [Publish] Processing $DIR\n"
              cd $DIR

              NPM_NAME=$(node -p "require('./package.json').name")
              NPM_VERSION=$(node -p "require('./package.json').version")

              if npm view "$NPM_NAME@$NPM_VERSION" > /dev/null 2>&1; then
                echo "ðŸ“¦ Unable to publish as the package already exists!"
              else
                npm run build
                npm publish

                echo "ðŸš€ Processed publish $DIR\n"
              fi

              cd -
            else
              echo "ðŸš« Skipping $DIR, not a package directory or no package.json found"
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}